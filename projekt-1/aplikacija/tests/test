#!/usr/bin/env php
<?php

require dirname(__DIR__).'/config/autoload.php';
\SimpleFW\Autoload\Autoloader::createAndRegister([
    $namespacePrefix = 'App\\Tests\\' => $basedir = dirname(__DIR__).'/tests',
]);

if (isset($argv[1])) {
    if (!is_file($argv[1])) {
        echo sprintf("\033[31mThe path \"%s\" is not a file.\033[0m", $argv[1]), \PHP_EOL;
        exit(1);
    }
    $tests = [$argv[1]];
} else {
    $globRecursive = static function (string $rootDir) use (&$globRecursive) {
        $tests = [];
        foreach (glob($rootDir.'/*') as $path) {
            if (is_dir($path)) {
                $tests = array_merge($tests, $globRecursive($path));
            } elseif (str_ends_with($path, 'Test.php')) {
                $tests[] = $path;
            }
        }

        return $tests;
    };
    $tests = $globRecursive(__DIR__);
}

foreach ($tests as $test) {
    $class = $namespacePrefix.ltrim(str_replace([$basedir, '.php', \DIRECTORY_SEPARATOR], ['', '', '\\'], realpath($test)), '\\');

    try {
        (new $class())->run();
    } catch (\App\Tests\AssertionException $e) {
        echo sprintf("\033[31mTest \"%s\" failed :(\033[0m", $class), \PHP_EOL;
        exit(1);
    } catch (\Throwable $e) {
        echo "\033[31mAn error occurred :O\033[0m", \PHP_EOL;
        echo $e->getMessage(), \PHP_EOL;
        echo $e->getTraceAsString(), \PHP_EOL;
        exit(1);
    }
}

echo "\033[32mAll tests passed :D\033[0m", \PHP_EOL;
